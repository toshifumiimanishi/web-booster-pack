(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{347:function(t,e,r){"use strict";r.r(e);var i=r(40),n=Object(i.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"overview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),r("p",[t._v("Website Boilerplate とは、静的な Web サイトを開発するためのボイラープレートです。主にフロントエンドの周辺技術をターゲットに整備しています。具体的な技術スタックは以下の通りです。")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("区分")]),t._v(" "),r("th",[t._v("技術スタック")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("言語")]),t._v(" "),r("td",[t._v("HTML / EJS / CSS / Sass / PostCSS / JavaScript / TypeScript")])]),t._v(" "),r("tr",[r("td",[t._v("タスクランナー")]),t._v(" "),r("td",[t._v("gulp")])]),t._v(" "),r("tr",[r("td",[t._v("モジュールバンドラ")]),t._v(" "),r("td",[t._v("rollup.js")])]),t._v(" "),r("tr",[r("td",[t._v("トランスパイラ")]),t._v(" "),r("td",[t._v("Babel")])]),t._v(" "),r("tr",[r("td",[t._v("テストフレームワーク")]),t._v(" "),r("td",[t._v("Jest + Puppeteer")])]),t._v(" "),r("tr",[r("td",[t._v("その他周辺技術")]),t._v(" "),r("td",[t._v("EditorConfig / stylelint / ESLint / Prettier")])])])]),t._v(" "),r("h2",{attrs:{id:"eslint-と-prettier-の併用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-と-prettier-の併用"}},[t._v("#")]),t._v(" ESLint と Prettier の併用")]),t._v(" "),r("p",[t._v("まずはじめに ESLint と Prettier は役割が異なります。"),r("a",{attrs:{href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLint"),r("OutboundLink")],1),t._v(" は JavaScript のための静的検証ツールであり、"),r("a",{attrs:{href:"https://prettier.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Prettier"),r("OutboundLink")],1),t._v(" はコードフォーマッターです。 "),r("strong",[t._v("昨今のフロントエンド開発では両者を併せて利用することを推奨されています。")]),t._v(" 実は ESLint にもコード整形機能が備わっているのですが、「餅は餅屋」という言葉があるようにコードフォーマッターである Prettier にコード整形を一任させることでより優れたコード整形を実現できます。")]),t._v(" "),r("p",[t._v("ESLint と Prettier を併用するには、"),r("a",{attrs:{href:"https://github.com/prettier/eslint-config-prettier",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("eslint-config-prettier")]),r("OutboundLink")],1),t._v(" と "),r("a",{attrs:{href:"https://github.com/prettier/eslint-plugin-prettier",target:"_blank",rel:"noopener noreferrer"}},[r("code",[t._v("eslint-plugin-prettier")]),r("OutboundLink")],1),t._v(" を利用します。")]),t._v(" "),r("ul",[r("li",[t._v("eslint-config-prettier： Prettier と競合するルールを無効にするためのプラグイン")]),t._v(" "),r("li",[t._v("eslint-plugin-prettier： Prettier 経由でコードを整形するためのルールを追加するプラグイン")])]),t._v(" "),r("p",[t._v("ESLint 以外にも TSLint や stylelint のようなリンターと併用するための方法は "),r("a",{attrs:{href:"https://prettier.io/docs/en/integrating-with-linters.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Prettier の公式ドキュメント"),r("OutboundLink")],1),t._v("に記載されています。")]),t._v(" "),r("p",[t._v("ちなみに、当ボイラープレートの TypeScript のリンターは TSLint ではなく ESLint を利用します。理由は TSLint 開発チームが ESLint のプラグインとして TSLint の機能を統合していく "),r("a",{attrs:{href:"https://github.com/typescript-eslint/typescript-eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("typescript-eslint"),r("OutboundLink")],1),t._v(" プロジェクトを開始し、TSLint は非推奨となりました。")]),t._v(" "),r("h2",{attrs:{id:"typescript-と-babel-の役割"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typescript-と-babel-の役割"}},[t._v("#")]),t._v(" TypeScript と Babel の役割")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript"),r("OutboundLink")],1),t._v(" には tsc という Microsoft 謹製のトランスパイラがありますが、TypeScript は静的型付けのみに徹し、トランスパイルは "),r("a",{attrs:{href:"https://babeljs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel"),r("OutboundLink")],1),t._v(" を利用しています。Babel は "),r("code",[t._v("@babel/preset-typescript")]),t._v(" を利用することで TypeScript に対応可能です。")])])}),[],!1,null,null,null);e.default=n.exports}}]);